{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","goods","goodsList","useState","isReversed","setReversed","Default","sortBy","setSortBy","sort","prod1","prod2","Length","length","Alphabetic","localeCompare","reverse","className","map","item","type","onClick","goodsFromServer","App","list","showList","ReactDOM","render","document","getElementById"],"mappings":"6KAEKA,E,8DAAAA,K,wBAAAA,E,gBAAAA,E,mBAAAA,M,KASE,IAAMC,EAA6B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACrCC,EAAS,YAAOD,GACtB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASJ,EAASO,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAN,EAAUO,MAAK,SAACC,EAAOC,GACrB,OAAQJ,GACN,KAAKR,EAASa,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKd,EAASe,WACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAITP,GACFF,EAAUc,UAIV,qCACE,oBAAIC,UAAU,YAAd,SACGf,EAAUgB,KAAI,SAAAC,GAAI,OACjB,oBAAeF,UAAU,GAAzB,SACGE,GADMA,QAKb,sBAAKF,UAAU,UAAf,UACE,wBACEG,KAAK,SACLC,QAAS,kBAAMhB,GAAaD,IAC5Ba,UAAU,SAHZ,qBAOA,wBACEG,KAAK,SACLC,QAAS,kBAAMb,EAAUT,EAASe,aAClCG,UAAU,SAHZ,iCAOA,wBACEG,KAAK,SACLC,QAAS,kBAAMb,EAAUT,EAASa,SAClCK,UAAU,SAHZ,4BAOA,wBACEG,KAAK,SACLC,QAAS,WACPb,EAAUT,EAASO,SACnBD,GAAY,IAEdY,UAAU,mBANZ,0BCzDFK,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAyBpB,oBAAS,GAAlC,mBAAOqB,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKR,UAAU,kDAAf,UACE,oBAAIA,UAAU,QAAd,mBACCO,EACG,cAAC,EAAD,CAAWvB,MAAOqB,IAElB,wBACEF,KAAK,SACLC,QAAS,kBAAMI,GAAS,IACxBR,UAAU,4BAHZ,sBCxBVS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ddb08c4.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nenum SortType {\n  Alphabetic = 'alphabetic',\n  Length = 'length',\n  Default = 'default',\n}\n\ntype Props = {\n  goods: string[],\n};\nexport const GoodsList: React.FC<Props> = ({ goods }: Props) => {\n  const goodsList = [...goods];\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.Default);\n\n  goodsList.sort((prod1, prod2) => {\n    switch (sortBy) {\n      case SortType.Length:\n        return prod1.length - prod2.length;\n      case SortType.Alphabetic:\n        return prod1.localeCompare(prod2);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsList.reverse();\n  }\n\n  return (\n    <>\n      <ul className=\"goodsList\">\n        {goodsList.map(item => (\n          <li key={item} className=\"\">\n            {item}\n          </li>\n        ))}\n      </ul>\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setReversed(!isReversed)}\n          className=\"button\"\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.Alphabetic)}\n          className=\"button\"\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.Length)}\n          className=\"button\"\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSortBy(SortType.Default);\n            setReversed(false);\n          }}\n          className=\"button is-danger\"\n        >\n          Reset\n        </button>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [list, showList] = useState(false);\n\n  return (\n    <div className=\"App container box is-centered has-text-centered\">\n      <h1 className=\"title\">Goods</h1>\n      {list\n        ? <GoodsList goods={goodsFromServer} />\n        : (\n          <button\n            type=\"button\"\n            onClick={() => showList(true)}\n            className=\"button is-light is-medium\"\n          >\n            Show\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}